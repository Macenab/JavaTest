/*

public class Main extends Thread {
  public void run(){
    System.out.println("This code is running in a thread");
  }
}

public class Main implements Runnable {
  public void run(){
    System.out.println("This code ir running in a thread");
  }
}
*/

/******* EXTEND EXAMPLE **************** public class Main extends Thread { public
 * static void main(String[] args){ Main thread = new Main(); thread.start();
 * System.out.println("This code is running outside the thread"); } public void
 * run(){ System.out.println("This code is running in a thread"); } }
 */

/********* IMPLEMENT EXAMPLE ************
public class Main implements Runnable {
  public static void main(String[] args) {
    Main myObj = new Main();
    Thread thread = new Thread(myObj);
    thread.start();
    System.out.println("Running code");
  }

  public void run() {
    System.out.println("This code is running in a thread");
  }
}
*/

/*  UNPREDICTABLE RESULT(Concurrency problems) **
public class Main extends Thread{
  public static int amount = 0;

  public static void main(String[] args){
    Main thread = new Main();
    thread.start();
    System.out.println(amount);
    amount++;
    System.out.println(amount);
  }
  public void run(){
    amount++;
  }
}
*/

///////////  isAlive() in action   //////////

public class Main extends Thread{
  public static int amount = 0;

  public static void main(String[] args){
    Main thread = new Main();
    thread.start();

    while(thread.isAlive()) {
      System.out.println("Waiting...");
    }
      System.out.println("Main " + amount);
      amount++;
      System.out.println("Main " + amount);
    }
    public void run(){
    amount++;
    }
}